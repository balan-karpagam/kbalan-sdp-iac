####Nested Template For Creating an ALB for SDP
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: List<AWS::EC2::Subnet::Id>
  PrivSubnetId:
    Type: List<AWS::EC2::Subnet::Id>
  ClusterSecurityGroup:
    Type: List<AWS::EC2::SecurityGroup::Id>

Resources:
####Create ALB
  SDPALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: SDP-ECS-ALB
      Scheme: internet-facing
      SecurityGroups: !Ref ClusterSecurityGroup
      Subnets: !Ref SubnetId
      Type: application
####Create Sonarqube ALB Listener
  SDPALBListener:
   Type: AWS::ElasticLoadBalancingV2::Listener
   Properties:
     DefaultActions:
       - Type: forward
         TargetGroupArn: !Ref 'SonarqubeTG'
     LoadBalancerArn: !Ref SDPALB
     Port: 80
     Protocol: "HTTP"
#####Create Sonarqube Target Group
  SonarqubeTG:
   Type: AWS::ElasticLoadBalancingV2::TargetGroup
   DependsOn: 
    - SDPALB
   Properties: 
     HealthCheckEnabled: true
     HealthCheckIntervalSeconds: 10
     HealthCheckPath: /sonarqube/api/system/status
     HealthCheckPort: traffic-port
     HealthCheckProtocol: HTTP
     HealthCheckTimeoutSeconds: 5
     HealthyThresholdCount: 5
     Name: SDPSonarqubeTG
     Port: 80
     Protocol: HTTP
     UnhealthyThresholdCount: 2
     VpcId: !Ref VpcId
#####Create Jenkins Target Group
  JenkinsTG:
   Type: AWS::ElasticLoadBalancingV2::TargetGroup
   DependsOn: 
    - SDPALB
   Properties: 
     HealthCheckEnabled: true
     HealthCheckIntervalSeconds: 10
     HealthCheckPath: /jenkins/login
     HealthCheckPort: traffic-port
     HealthCheckProtocol: HTTP
     HealthCheckTimeoutSeconds: 5
     HealthyThresholdCount: 5
     Name: SDPJenkinsTG
     Port: 80
     Protocol: HTTP
     UnhealthyThresholdCount: 2
     VpcId: !Ref VpcId
#####Create ALB Listener Rule
  SonarqubeALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn: SDPALBListener
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'SonarqubeTG'
      Conditions:
      - Field: path-pattern
        Values: [/sonarqube,sonarqube/**]
      ListenerArn: !Ref 'SDPALBListener'
      Priority: 2
#####Create ALB Listener Rule
  JenkinsALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn: SDPALBListener
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'JenkinsTG'
      Conditions:
      - Field: path-pattern
        Values: [/jenkins,/jenkins/**]
      ListenerArn: !Ref 'SDPALBListener'
      Priority: 1
#####Create NLB for Jenkins Agent configuration
  SDPNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Name: SDP-ECS-NLB
      Scheme: internal
      Subnets: !Ref PrivSubnetId
      Type: network
#####Create Jenkins Agent Target Group
  JenkinsAgentTG:
   Type: AWS::ElasticLoadBalancingV2::TargetGroup
   DependsOn: 
    - SDPNLB
   Properties: 
     HealthCheckEnabled: true
     HealthCheckIntervalSeconds: 10
     HealthCheckPath: /jenkins/login
     HealthCheckPort: 8080
     HealthCheckProtocol: HTTP
     HealthyThresholdCount: 3
     Name: SDPJenkinsAgentTG
     Port: 80
     Protocol: TCP
     UnhealthyThresholdCount: 3
     VpcId: !Ref VpcId

####Create NLB Listener
  SDPNLBListener1:
     Type: AWS::ElasticLoadBalancingV2::Listener
     DependsOn: 
      - SDPNLB
      - JenkinsAgentTG
     Properties:
       DefaultActions:
         - Type: forward
           TargetGroupArn: !Ref 'JenkinsAgentTG'
       LoadBalancerArn: !Ref SDPNLB
       Port: 80
       Protocol: "TCP"
  SDPNLBListener2:
     DependsOn: 
      - SDPNLB
      - JenkinsAgentTG
     Type: AWS::ElasticLoadBalancingV2::Listener
     Properties:
       DefaultActions:
         - Type: forward
           TargetGroupArn: !Ref 'JenkinsAgentTG'
       LoadBalancerArn: !Ref SDPNLB
       Port: 50000
       Protocol: "TCP"

Outputs:
  SonarqubeTargetGroup:
    Value: !Ref 'SonarqubeTG'
  JenkinsTargetGroup:
    Value: !Ref 'JenkinsTG'
  JenkinsAgentTargetGroup:
    Value: !Ref 'JenkinsAgentTG'
  DNSName:
    Value: !GetAtt SDPALB.DNSName
  NLBDNSName:
    Value: !GetAtt SDPNLB.DNSName