Description: >
    This template contains the security groups required by our entire stack.
    We create them in a seperate nested template, so they can be referenced
    by all of the other nested templates.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the security groups should be deployed to

Resources:

    # This security group defines who/where is allowed to access the ECS hosts directly.
    # By default we're just allowing access from the load balancer.  If you want to SSH
    # into the hosts, or expose non-load balanced services you can open their ports here.
    #ECSHostSecurityGroup:
    #    Type: AWS::EC2::SecurityGroup
    #    Properties:
    #        VpcId: !Ref VPC
    #        GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
    #        SecurityGroupIngress:
    #            # Only allow inbound access to ECS from the ELB
    #            - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
    #              IpProtocol: -1
    #            -
    #              IpProtocol: "tcp"
    #              FromPort: 22
    #              ToPort: 22
    #              SourceSecurityGroupId: !Ref BastionSecurityGroup
    #        Tags:
    #            - Key: Name
    #              Value: !Sub ${EnvironmentName}-ECS-Hosts

    # This security group defines who/where is allowed to access the Application Load Balancer.
    # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
    # it further if you want.
    #LoadBalancerSecurityGroup:
    #    Type: AWS::EC2::SecurityGroup
    #    Properties:
    #        VpcId: !Ref VPC
    #        GroupDescription: Access to the load balancer that sits in front of ECS
    #        SecurityGroupIngress:
    #            # Allow access from anywhere to our ECS services
    #            - CidrIp: 0.0.0.0/0
    #              IpProtocol: -1
    #        Tags:
    #            - Key: Name
    #              Value: !Sub ${EnvironmentName}-LoadBalancers

    #BastionSecurityGroup:
    #    Type: AWS::EC2::SecurityGroup
    #    Properties:
    #      GroupDescription: Bastion host which is allowed to tailor the nodes
    #      VpcId: !Ref VPC
    #      SecurityGroupIngress:
    #        - IpProtocol: tcp
    #          FromPort: 22
    #          ToPort: 22
    #          Description: ingress access to Ansible access from ex-cluster
    #          CidrIp: "0.0.0.0/0"
    SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Security group for SDP environment
            SecurityGroupIngress:
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 443
                  ToPort: 443
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 8080
                  ToPort: 8080
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 9000
                  ToPort: 9000
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 50000
                  ToPort: 50000
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 5432
                  ToPort: 5432
            SecurityGroupEgress:
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 443
                  ToPort: 443
                - CidrIp: 0.0.0.0/0
                  IpProtocol: tcp
                  FromPort: 50000
                  ToPort: 50000
            
  
    OutboundRule:
        Type: AWS::EC2::SecurityGroupEgress
        Properties:
            DestinationSecurityGroupId: !GetAtt SecurityGroup.GroupId
            GroupId: !GetAtt SecurityGroup.GroupId
            IpProtocol: tcp
            FromPort: 0
            ToPort: 65535

Outputs:
    #ECSHostSecurityGroup:
    #    Description: A reference to the security group for ECS hosts
    #    Value: !Ref ECSHostSecurityGroup
#
    #LoadBalancerSecurityGroup:
    #    Description: A reference to the security group for load balancers
    #    Value: !Ref LoadBalancerSecurityGroup
#
    #BastionSecurityGroup:
    #    Description: A reference to the security group for Bastion host
    #    Value: !Ref BastionSecurityGroup
        
    SecurityGroups:
        Description: A list of the security groups.
        Value: !Join [ ",", [ !Ref SecurityGroup ]]