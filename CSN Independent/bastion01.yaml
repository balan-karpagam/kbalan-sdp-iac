Description: >
    This nasted template is to create a bastion host to access the internal nodes in the cluster.
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Description: VPC that the Openshift cluster should be deployed to
        Type: AWS::EC2::VPC::Id

    PublicSubnet1:
        Description: Referencing PublicSubnet1
        Type: String

    PublicSubnet2:
        Description: Referencing PublicSubnet2
        Type: String

    BastionSecurityGroup:
        Description: A security group that includes Bastion host in the cluster
        Type: AWS::EC2::SecurityGroup::Id

    KeyPairName:
        Description: Name of an existing EC2 KeyPair to enable SSH access to the machine instances.
        Type: "AWS::EC2::KeyPair::KeyName"
        ConstraintDescription: Must be the name of an existing EC2 KeyPair.
        Default: bdso-def

Resources:
    Bastion01:
        Type: "AWS::EC2::Instance"
    # We set a long timeout for create with the expectation that we are triggering the
    # install playbook.  If that is not happening we could drop the timeout back to a

        Metadata:
            AWS::CloudFormation::Init:
                configSets:
                    default:
                        - install_base
                install_base:
                    packages:
                        yum:
                        # Example packages:
                            wget: []
                            git: []
                    files:
                        # These files are needed for CloudFormation::Init to work
                        /etc/cfn/cfn-hup.conf:
                            content: !Sub |
                                [main]
                                stack=${AWS::StackId}
                                region=${AWS::Region}
                                interval=1
                        /etc/cfn/hooks.d/cfn-auto-reloader.conf:
                            content: !Sub |
                                [cfn-auto-reloader-hook]
                                triggers=post.update
                                path=Resources.Server.Metadata.AWS::CloudFormation::Init
                                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --region ${AWS::Region} --resource AppNodeANSmaster
                                runas=root
                        /home/ec2-user/.ssh/id_rsa:
                            group: ec2-user
                            owner: ec2-user
                            mode: "000400"
                            content: |
                                  -----BEGIN RSA PRIVATE KEY-----
                                  MIIEowIBAAKCAQEAsYvuQmr5+CxMQ5FWafMijQw/BVXeBqny8Cbs6tlFYpr8rott
                                  AwezmoHgso8N9a8qFD7qA8SqsdtJVuNtoCgQbYowvFILM1PDwIK/1Fu1irYxadOy
                                  /qad7e/P+TaMNPYz1CFfTSbN+0FCsW9jDaFTkabNh7np9s6ffSs1vlfGZZAlUjog
                                  Q6ixwTCy6QJWAD88lcrdgp4MdRRTbuKRH/xICgbIQp8xrEoPmxVDg3HlpOYLeT51
                                  OFN6bIN3YaDhCnabGFJoI6a4oWZnpZE+sOzMnLeBsaTwc5c/e5rIaQFQipjkYQ8M
                                  ZLnxKtV50GBMuOCsSVckCPcSsz1zNlaVKuWiYwIDAQABAoIBAQCIIp5HCRWwJ+82
                                  I9uZk5cbhZdQ9P0wKOGhKIeir4QXTnWPNFMa7q3VO97ZqvzuNChUq8TtrL+hbl32
                                  pJ3rHq0yALLLwzDZY1IGa3rBTqyNtpN+7Jcj0QfpaGcUVLH+7gThk9EqLCXmkKyd
                                  tqXBzsBwPvD7MB9oYhhCdn5X+5+hQTTnxmuOAEjMMI33Mq6Bsqs/i+YaxZ5Ow4hS
                                  5ZgxtmELIEXm/SxAJ2zAuK1PFsPGtKJsvkBaJ+kGRl4KqCbuoEZit+X6jradnkjw
                                  Hcd6YqLcgINvFrm0hsPZydLxIjjDfDlIELXwc6DoT51uFddQgZN83xRBVXUPe7iO
                                  90U5kaqxAoGBAOOhd0MlKo0gd6PoWm37Qtl7Y8d6+ituJvJhvYY4Eob7qIpqFwPD
                                  9o09e9sbY3xFfDG/163pKIuT/LNr3FVXw8XqFvgyLa7obnAbQ/x0Ds7m0FX96s/g
                                  ZgYeYg0wf702VM9PpgUcCNy1FlKEvbWJawicV29WCkFV3h+c21HCoH3pAoGBAMes
                                  iUee/DSnCHg/48MiRyc3kUjzR3Xrfp2bSi+DTOSVAx9eoIY89NrzrHsw2P39cMNR
                                  J+hiodYCcP2C+qp245IwXYPzq4nDnx9XSFWho7BuuMaufoigmTG9dPwG8l3avlrU
                                  YQujjEQJf2c2Ll1CjyB2IlOxoKDxSPjVcEyT/bJrAoGAU1sqcDUo+tsb1LLego3T
                                  Mg7kQAVBnSvOKU4vd/oKltGLK3ykBuX44EnWlCrYaIaNby5gTbgm983uaMmjusDT
                                  2SLa3HKLlhRZdMYXRFg/n/aX7hV4qjzzP2Ra5ZeP/3ro3a2+DvrwJ9pMXVVsnxC+
                                  WD3gKs4oHTrTh2IKUktiOBkCgYBXXwsO+OV5EKHnJGXAbA5gfbMoDbP2SF62Dk5u
                                  7fBGkWG1Z02sj53A9SFDIoPA2BZwkOF6kTYplBXnCFoxHybDQECbTZOBC8VkDGhN
                                  eBZNTJWz8oTRuhxupG09HrkNEnt6+TWhxyXIW7OQ8SdmjYpddPPeVXppEkuQ/qxO
                                  Be/cEwKBgFBzvxqSofZyhLvJwsWdO7B9uvimwXT6lPaXQ1SUi2WMb7WJO4G6wdnk
                                  vGr94KSoyCXC9PhgavM7CUTBckYcVGdxt0QPbGBkDVlNVWxkA4TGfqBiOs9eAMHH
                                  pgulm3DoiDPoTtZCtk8Eta3XMTDtQzXaQGBtFRAeofAradyw+w5C
                                  -----END RSA PRIVATE KEY-----
                    services:
                        sysvinit:
                            cfn-hup:
                                enabled: true
                                ensureRunning: true

        Properties:
          KeyName: !Ref KeyPairName
          SubnetId: !Ref PublicSubnet1
          SecurityGroupIds:
            - Ref: BastionSecurityGroup

          InstanceType: t2.micro
          ImageId: ami-6871a115
          Tags:
            - Key: noderole
              Value: bastion-host
            - Key: Name
              Value: !Sub "${EnvironmentName}-Bastion Host"
          UserData:
            Fn::Base64: !Sub |
               #!/bin/bash -x
               rpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-7.noarch.rpm
               easy_install pip
               cd /usr/bin
               pip install pystache
               pip install argparse
               pip install python-daemon
               pip install requests
               cd /opt
               curl -O https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
               tar -xvpf aws-cfn-bootstrap-latest.tar.gz
               cd aws-cfn-bootstrap-1.4/
               python setup.py build
               python setup.py install
               ln -s /usr/init/redhat/cfn-hup /etc/init.d/cfn-hup
               chmod 775 /usr/init/redhat/cfn-hup
               cd /opt
               mkdir aws
               cd aws
               mkdir bin
               ln -s /usr/bin/cfn-hup /opt/aws/bin/cfn-hup
               ln -s /usr/bin/cfn-init /opt/aws/bin/cfn-init
               ln -s /usr/bin/cfn-signal /opt/aws/bin/cfn-signal
               ln -s /usr/bin/cfn-elect-cmd-leader /opt/aws/bin/cfn-elect-cmd-leader
               ln -s /usr/bin/cfn-get-metadata /opt/aws/bin/cfn-get-metadata
               ln -s /usr/bin/cfn-send-cmd-event /opt/aws/bin/cfn-send-cmd-event
               ln -s /usr/bin/cfn-send-cmd-result /opt/aws/bin/cfn-send-cmd-result

               # Install the files and packages from the metadata
               /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource AppNodeANSmaster --region ${AWS::Region}

               # Signal the status from cfn-init
               /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AppNodeANSmaster --region ${AWS::Region}
Outputs:
    Bastion01:
        Description: A reference to the created bastion01 host
        Value: !Ref Bastion01
